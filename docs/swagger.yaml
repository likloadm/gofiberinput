basePath: /
definitions:
  model.AccessTokenJWT:
    properties:
      token:
        type: string
    type: object
  model.MessageModel:
    properties:
      message:
        example: error
        type: string
      success:
        example: false
        type: boolean
    type: object
  model.SystemUserBalance:
    properties:
      balance:
        type: number
      id:
        type: integer
      name:
        type: string
      password:
        type: string
    type: object
  model.TransactionUserSystem:
    properties:
      amount:
        type: number
      id:
        type: integer
      sender:
        type: integer
      status:
        type: integer
      type:
        type: integer
    type: object
host: 127.0.0.1:3000
info:
  contact: {}
  description: API for controlling the receipt and withdrawal of funds
  title: Go Fiber Input
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: login user by name and password
      operationId: Login
      parameters:
      - description: User name
        in: formData
        name: name
        required: true
        type: string
      - description: User password
        in: formData
        name: pass
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: access JWT token
          schema:
            $ref: '#/definitions/model.AccessTokenJWT'
        "400":
          description: Server error
          schema:
            $ref: '#/definitions/model.MessageModel'
      summary: login user by name and password
  /register:
    post:
      consumes:
      - application/json
      description: register user by name and password
      operationId: Register
      parameters:
      - description: Username
        in: formData
        name: name
        required: true
        type: string
      - description: User password
        in: formData
        name: pass
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User registered
          schema:
            $ref: '#/definitions/model.MessageModel'
        "400":
          description: Server error
          schema:
            $ref: '#/definitions/model.MessageModel'
      summary: register user by name and password
  /transaction:
    get:
      consumes:
      - application/json
      description: get transaction by id
      operationId: GetTransaction
      parameters:
      - description: Transaction id
        in: formData
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.TransactionUserSystem'
        "400":
          description: Server error
          schema:
            $ref: '#/definitions/model.MessageModel'
        "401":
          description: Bearer auth required
          schema:
            $ref: '#/definitions/model.MessageModel'
      summary: Get transaction by id
    post:
      consumes:
      - application/json
      description: get id by type transaction and amount > 0
      operationId: transaction
      parameters:
      - description: Transaction amount(>0)
        in: formData
        name: amount
        required: true
        type: number
      - description: 1 input, 2 output
        in: formData
        name: type
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/model.SystemUserBalance'
        "400":
          description: Server error
          schema:
            $ref: '#/definitions/model.MessageModel'
        "401":
          description: Bearer auth required
          schema:
            $ref: '#/definitions/model.MessageModel'
      summary: Add a new transaction to the database and change balance
  /user:
    get:
      consumes:
      - application/json
      description: get user by jwt auth
      operationId: GetUser
      produces:
      - application/json
      responses:
        "200":
          description: user
          schema:
            type: string
        "400":
          description: Server error
          schema:
            $ref: '#/definitions/model.MessageModel'
        "401":
          description: Bearer auth required
          schema:
            $ref: '#/definitions/model.MessageModel'
      summary: get user by jwt auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Bearer
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
